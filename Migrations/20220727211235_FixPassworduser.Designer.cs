// <auto-generated />
using System;
using ApiAmaz.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiAmaz.Migrations
{
    [DbContext(typeof(AmazDbContext))]
    [Migration("20220727211235_FixPassworduser")]
    partial class FixPassworduser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApiAmaz.Model.IdentityDocumentType", b =>
                {
                    b.Property<string>("DocumentType")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("TIPODOCUMENTO");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREADOR");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHACREACION");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHAMODIFICACION")
                        .HasComputedColumnSql("GetUtcDate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOMBRE");

                    b.Property<string>("NameShort")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NOMBRECORTO");

                    b.Property<string>("Updater")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFICADOR");

                    b.Property<bool>("isActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("ESTADO");

                    b.HasKey("DocumentType");

                    b.ToTable("TIPODOCUMENTOIDENTIDAD", (string)null);

                    b.HasData(
                        new
                        {
                            DocumentType = "00",
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 16, 12, 34, 959, DateTimeKind.Local).AddTicks(4081),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OTROS",
                            NameShort = "OTROS",
                            Updater = "admin",
                            isActive = false
                        },
                        new
                        {
                            DocumentType = "01",
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 16, 12, 34, 959, DateTimeKind.Local).AddTicks(4089),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "LIBRETA ELECTORAL O DNI",
                            NameShort = "L.E / DNI",
                            Updater = "admin",
                            isActive = false
                        },
                        new
                        {
                            DocumentType = "04",
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 16, 12, 34, 959, DateTimeKind.Local).AddTicks(4091),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CARNET DE EXTRANJERIA",
                            NameShort = "CARNET EXT.",
                            Updater = "admin",
                            isActive = false
                        },
                        new
                        {
                            DocumentType = "06",
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 16, 12, 34, 959, DateTimeKind.Local).AddTicks(4093),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "REG. UNICO DE CONTRIBUYENTES",
                            NameShort = "RUC",
                            Updater = "admin",
                            isActive = false
                        },
                        new
                        {
                            DocumentType = "07",
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 16, 12, 34, 959, DateTimeKind.Local).AddTicks(4095),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PASAPORTE",
                            NameShort = "PASAPORTE",
                            Updater = "admin",
                            isActive = false
                        },
                        new
                        {
                            DocumentType = "11",
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 16, 12, 34, 959, DateTimeKind.Local).AddTicks(4098),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PART. DE NACIMIENTO-IDENTIDAD",
                            NameShort = "P. NAC.",
                            Updater = "admin",
                            isActive = false
                        });
                });

            modelBuilder.Entity("ApiAmaz.Model.Role", b =>
                {
                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CODIGO");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREADOR");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHACREACION");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHAMODIFICACION")
                        .HasComputedColumnSql("GetUtcDate()");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("ESTADO");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NOMBRE");

                    b.Property<string>("Updater")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFICADOR");

                    b.HasKey("Code");

                    b.ToTable("ROL", (string)null);

                    b.HasData(
                        new
                        {
                            Code = new Guid("6e4e0b71-c420-4447-aaa7-e9b2ed729d60"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 16, 12, 34, 958, DateTimeKind.Local).AddTicks(6901),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "VENDEDOR",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("557e3808-e5f4-4f18-b6f4-a8d219147cfa"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 16, 12, 34, 958, DateTimeKind.Local).AddTicks(6919),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "ESTILISTA",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("9d476a12-a564-406a-a81c-45e8a5cc6456"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 16, 12, 34, 958, DateTimeKind.Local).AddTicks(6924),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "MARKETING",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("5f1e5987-ef90-4d59-9192-f713d14e7ae7"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 16, 12, 34, 958, DateTimeKind.Local).AddTicks(6926),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "DESPACHADOR",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("67137570-c0ab-4598-8718-88a10112adb1"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 16, 12, 34, 958, DateTimeKind.Local).AddTicks(6929),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "COBRANZA",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("2e22733d-9bc3-461e-b377-a14b585d0224"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 16, 12, 34, 958, DateTimeKind.Local).AddTicks(6954),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "ADMINISTRATIVO",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("3427e015-e768-493b-bf2b-c5949791b2d2"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 16, 12, 34, 958, DateTimeKind.Local).AddTicks(6957),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "GERENTE COMERCIAL",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("1144b0d8-aa02-4ed0-a3a0-99a53ea84545"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 16, 12, 34, 958, DateTimeKind.Local).AddTicks(6960),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "GERENTE GENERAL",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("dc216ded-9d25-46a7-aa73-74c2005f9c10"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 16, 12, 34, 958, DateTimeKind.Local).AddTicks(6963),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "VENDEDOR FREE",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("df581d46-7b01-4a2a-82c9-ba4791558bb1"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 16, 12, 34, 958, DateTimeKind.Local).AddTicks(6966),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "COORDINADOR",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("dcecaf47-895a-4adb-92b5-0a62336619eb"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 16, 12, 34, 958, DateTimeKind.Local).AddTicks(6982),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "SUPERADMIN",
                            Updater = "admin"
                        });
                });

            modelBuilder.Entity("ApiAmaz.Model.User", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("USUARIO");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CLAVE");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREADOR");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHACREACION");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHAMODIFICACION")
                        .HasComputedColumnSql("GetUtcDate()");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("ESTADO");

                    b.Property<string>("SoftwareName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("APLICACION");

                    b.Property<string>("Updater")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFICADOR");

                    b.Property<Guid>("WorkerCode")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TRABAJADOR");

                    b.HasKey("Username", "Password");

                    b.HasIndex("WorkerCode");

                    b.ToTable("USUARIO", (string)null);

                    b.HasData(
                        new
                        {
                            Username = "admin",
                            Password = "nFwdsS1uqww=",
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 16, 12, 34, 960, DateTimeKind.Local).AddTicks(5451),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            SoftwareName = "WebAmaz",
                            Updater = "admin",
                            WorkerCode = new Guid("dcecaf47-895a-4adb-92b5-0a62336619fc")
                        });
                });

            modelBuilder.Entity("ApiAmaz.Model.Worker", b =>
                {
                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CODIGO");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREADOR");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHACREACION");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHAMODIFICACION")
                        .HasComputedColumnSql("GetUtcDate()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NOMBRE");

                    b.Property<Guid>("RoleCode")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ROL");

                    b.Property<string>("Updater")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFICADOR");

                    b.Property<bool>("isActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("ESTADO");

                    b.HasKey("Code");

                    b.HasIndex("RoleCode");

                    b.ToTable("TRABAJADOR", (string)null);

                    b.HasData(
                        new
                        {
                            Code = new Guid("dcecaf47-895a-4adb-92b5-0a62336619fc"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 16, 12, 34, 959, DateTimeKind.Local).AddTicks(6445),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "marcodlc10@gmail.com",
                            Name = "admin zeus",
                            RoleCode = new Guid("dcecaf47-895a-4adb-92b5-0a62336619eb"),
                            Updater = "admin",
                            isActive = false
                        });
                });

            modelBuilder.Entity("ApiAmaz.Model.User", b =>
                {
                    b.HasOne("ApiAmaz.Model.Worker", "Worker")
                        .WithMany("Users")
                        .HasForeignKey("WorkerCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("ApiAmaz.Model.Worker", b =>
                {
                    b.HasOne("ApiAmaz.Model.Role", "Role")
                        .WithMany("Workers")
                        .HasForeignKey("RoleCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ApiAmaz.Model.Role", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("ApiAmaz.Model.Worker", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
