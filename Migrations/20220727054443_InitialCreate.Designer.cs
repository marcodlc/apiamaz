// <auto-generated />
using System;
using ApiAmaz.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiAmaz.Migrations
{
    [DbContext(typeof(AmazDbContext))]
    [Migration("20220727054443_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApiAmaz.Model.IdentityDocumentType", b =>
                {
                    b.Property<string>("DocumentType")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("TIPODOCUMENTO");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREADOR");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHACREACION");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHAMODIFICACION")
                        .HasComputedColumnSql("GetUtcDate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOMBRE");

                    b.Property<string>("NameShort")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NOMBRECORTO");

                    b.Property<string>("Updater")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFICADOR");

                    b.Property<bool>("isActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("ESTADO");

                    b.HasKey("DocumentType");

                    b.ToTable("TIPODOCUMENTOIDENTIDAD", (string)null);

                    b.HasData(
                        new
                        {
                            DocumentType = "00",
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 44, 42, 930, DateTimeKind.Local).AddTicks(8159),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OTROS",
                            NameShort = "OTROS",
                            Updater = "admin",
                            isActive = false
                        },
                        new
                        {
                            DocumentType = "01",
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 44, 42, 930, DateTimeKind.Local).AddTicks(8169),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "LIBRETA ELECTORAL O DNI",
                            NameShort = "L.E / DNI",
                            Updater = "admin",
                            isActive = false
                        },
                        new
                        {
                            DocumentType = "04",
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 44, 42, 930, DateTimeKind.Local).AddTicks(8171),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CARNET DE EXTRANJERIA",
                            NameShort = "CARNET EXT.",
                            Updater = "admin",
                            isActive = false
                        },
                        new
                        {
                            DocumentType = "06",
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 44, 42, 930, DateTimeKind.Local).AddTicks(8173),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "REG. UNICO DE CONTRIBUYENTES",
                            NameShort = "RUC",
                            Updater = "admin",
                            isActive = false
                        },
                        new
                        {
                            DocumentType = "07",
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 44, 42, 930, DateTimeKind.Local).AddTicks(8175),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PASAPORTE",
                            NameShort = "PASAPORTE",
                            Updater = "admin",
                            isActive = false
                        },
                        new
                        {
                            DocumentType = "11",
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 44, 42, 930, DateTimeKind.Local).AddTicks(8178),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PART. DE NACIMIENTO-IDENTIDAD",
                            NameShort = "P. NAC.",
                            Updater = "admin",
                            isActive = false
                        });
                });

            modelBuilder.Entity("ApiAmaz.Model.Role", b =>
                {
                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CODIGO");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREADOR");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHACREACION");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHAMODIFICACION")
                        .HasComputedColumnSql("GetUtcDate()");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("ESTADO");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NOMBRE");

                    b.Property<string>("Updater")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFICADOR");

                    b.HasKey("Code");

                    b.ToTable("ROL", (string)null);

                    b.HasData(
                        new
                        {
                            Code = new Guid("0da303e9-2e0e-4047-a837-705f2c0cabe4"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 44, 42, 930, DateTimeKind.Local).AddTicks(744),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "VENDEDOR",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("b0233e3c-d2a6-4b07-b7c4-83e271579b0c"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 44, 42, 930, DateTimeKind.Local).AddTicks(766),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "ESTILISTA",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("f6766044-544b-4dec-9727-22d766078690"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 44, 42, 930, DateTimeKind.Local).AddTicks(769),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "MARKETING",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("c24ca63d-cfc0-4b5d-a29f-318100dff246"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 44, 42, 930, DateTimeKind.Local).AddTicks(772),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "DESPACHADOR",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("348492bf-244f-4915-b9a2-a3602427245f"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 44, 42, 930, DateTimeKind.Local).AddTicks(774),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "COBRANZA",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("27d8b9cc-90bc-4180-9911-1c217c4df299"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 44, 42, 930, DateTimeKind.Local).AddTicks(781),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "ADMINISTRATIVO",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("0322ed2f-c1d9-441e-b2df-75f94e8f1f79"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 44, 42, 930, DateTimeKind.Local).AddTicks(783),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "GERENTE COMERCIAL",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("cb91795a-d377-4e22-a547-600d0f9b3f6f"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 44, 42, 930, DateTimeKind.Local).AddTicks(785),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "GERENTE GENERAL",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("e71cc00d-6f7f-4c04-ab42-2b9ea4053b49"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 44, 42, 930, DateTimeKind.Local).AddTicks(792),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "VENDEDOR FREE",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("a39b228d-5bfe-418b-9009-72f907a83e01"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 44, 42, 930, DateTimeKind.Local).AddTicks(797),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "COORDINADOR",
                            Updater = "admin"
                        });
                });

            modelBuilder.Entity("ApiAmaz.Model.Worker", b =>
                {
                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CODIGO");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREADOR");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHACREACION");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHAMODIFICACION")
                        .HasComputedColumnSql("GetUtcDate()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleCode")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ROL");

                    b.Property<string>("Updater")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFICADOR");

                    b.Property<bool>("isActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("ESTADO");

                    b.HasKey("Code");

                    b.HasIndex("RoleCode");

                    b.ToTable("TRABAJADOR", (string)null);
                });

            modelBuilder.Entity("ApiAmaz.Model.Worker", b =>
                {
                    b.HasOne("ApiAmaz.Model.Role", "Role")
                        .WithMany("Workers")
                        .HasForeignKey("RoleCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ApiAmaz.Model.Role", b =>
                {
                    b.Navigation("Workers");
                });
#pragma warning restore 612, 618
        }
    }
}
