// <auto-generated />
using System;
using ApiAmaz.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiAmaz.Migrations
{
    [DbContext(typeof(AmazDbContext))]
    [Migration("20220727054735_Fix_Worker_Name")]
    partial class Fix_Worker_Name
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApiAmaz.Model.IdentityDocumentType", b =>
                {
                    b.Property<string>("DocumentType")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("TIPODOCUMENTO");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREADOR");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHACREACION");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHAMODIFICACION")
                        .HasComputedColumnSql("GetUtcDate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOMBRE");

                    b.Property<string>("NameShort")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NOMBRECORTO");

                    b.Property<string>("Updater")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFICADOR");

                    b.Property<bool>("isActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("ESTADO");

                    b.HasKey("DocumentType");

                    b.ToTable("TIPODOCUMENTOIDENTIDAD", (string)null);

                    b.HasData(
                        new
                        {
                            DocumentType = "00",
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 47, 35, 159, DateTimeKind.Local).AddTicks(9063),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "OTROS",
                            NameShort = "OTROS",
                            Updater = "admin",
                            isActive = false
                        },
                        new
                        {
                            DocumentType = "01",
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 47, 35, 159, DateTimeKind.Local).AddTicks(9076),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "LIBRETA ELECTORAL O DNI",
                            NameShort = "L.E / DNI",
                            Updater = "admin",
                            isActive = false
                        },
                        new
                        {
                            DocumentType = "04",
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 47, 35, 159, DateTimeKind.Local).AddTicks(9078),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CARNET DE EXTRANJERIA",
                            NameShort = "CARNET EXT.",
                            Updater = "admin",
                            isActive = false
                        },
                        new
                        {
                            DocumentType = "06",
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 47, 35, 159, DateTimeKind.Local).AddTicks(9080),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "REG. UNICO DE CONTRIBUYENTES",
                            NameShort = "RUC",
                            Updater = "admin",
                            isActive = false
                        },
                        new
                        {
                            DocumentType = "07",
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 47, 35, 159, DateTimeKind.Local).AddTicks(9081),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PASAPORTE",
                            NameShort = "PASAPORTE",
                            Updater = "admin",
                            isActive = false
                        },
                        new
                        {
                            DocumentType = "11",
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 47, 35, 159, DateTimeKind.Local).AddTicks(9085),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PART. DE NACIMIENTO-IDENTIDAD",
                            NameShort = "P. NAC.",
                            Updater = "admin",
                            isActive = false
                        });
                });

            modelBuilder.Entity("ApiAmaz.Model.Role", b =>
                {
                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CODIGO");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREADOR");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHACREACION");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHAMODIFICACION")
                        .HasComputedColumnSql("GetUtcDate()");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("ESTADO");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NOMBRE");

                    b.Property<string>("Updater")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFICADOR");

                    b.HasKey("Code");

                    b.ToTable("ROL", (string)null);

                    b.HasData(
                        new
                        {
                            Code = new Guid("0bf5e8e7-16fa-4bbc-930e-1d1e7a071879"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 47, 35, 158, DateTimeKind.Local).AddTicks(9747),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "VENDEDOR",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("e0b9fe90-797e-4979-bfb5-0cf47e98e070"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 47, 35, 158, DateTimeKind.Local).AddTicks(9771),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "ESTILISTA",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("4be3b904-6295-44e5-9023-d0a7977dc5c0"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 47, 35, 158, DateTimeKind.Local).AddTicks(9773),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "MARKETING",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("2ba1307c-47d8-46a7-8de0-e00b1a1703e4"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 47, 35, 158, DateTimeKind.Local).AddTicks(9776),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "DESPACHADOR",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("962bdd50-f8ed-4918-a6d9-6e6d93f2ec04"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 47, 35, 158, DateTimeKind.Local).AddTicks(9779),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "COBRANZA",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("c474dd60-0038-44f7-87db-26b5a469e8db"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 47, 35, 158, DateTimeKind.Local).AddTicks(9807),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "ADMINISTRATIVO",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("8b401413-e870-4a4f-8183-46cf84184e0a"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 47, 35, 158, DateTimeKind.Local).AddTicks(9810),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "GERENTE COMERCIAL",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("b09d5c7c-1232-42ce-ba68-5c03d0e15c6e"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 47, 35, 158, DateTimeKind.Local).AddTicks(9812),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "GERENTE GENERAL",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("0013cdb4-029b-4eab-b367-41dee6445ea9"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 47, 35, 158, DateTimeKind.Local).AddTicks(9815),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "VENDEDOR FREE",
                            Updater = "admin"
                        },
                        new
                        {
                            Code = new Guid("18e84107-27e4-4dc9-bee6-938a7a767059"),
                            Creator = "admin",
                            DateCreated = new DateTime(2022, 7, 27, 0, 47, 35, 158, DateTimeKind.Local).AddTicks(9819),
                            DateUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Name = "COORDINADOR",
                            Updater = "admin"
                        });
                });

            modelBuilder.Entity("ApiAmaz.Model.Worker", b =>
                {
                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CODIGO");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CREADOR");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHACREACION");

                    b.Property<DateTime>("DateUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHAMODIFICACION")
                        .HasComputedColumnSql("GetUtcDate()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NOMBRE");

                    b.Property<Guid>("RoleCode")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ROL");

                    b.Property<string>("Updater")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("MODIFICADOR");

                    b.Property<bool>("isActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("ESTADO");

                    b.HasKey("Code");

                    b.HasIndex("RoleCode");

                    b.ToTable("TRABAJADOR", (string)null);
                });

            modelBuilder.Entity("ApiAmaz.Model.Worker", b =>
                {
                    b.HasOne("ApiAmaz.Model.Role", "Role")
                        .WithMany("Workers")
                        .HasForeignKey("RoleCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ApiAmaz.Model.Role", b =>
                {
                    b.Navigation("Workers");
                });
#pragma warning restore 612, 618
        }
    }
}
